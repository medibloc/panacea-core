// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: panacea/aol/v2/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateTopic defines the Msg/CreateTopic request type.
type MsgCreateTopicRequest struct {
	TopicName    string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Description  string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	OwnerAddress string `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (m *MsgCreateTopicRequest) Reset()         { *m = MsgCreateTopicRequest{} }
func (m *MsgCreateTopicRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTopicRequest) ProtoMessage()    {}
func (*MsgCreateTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{0}
}
func (m *MsgCreateTopicRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTopicRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTopicRequest.Merge(m, src)
}
func (m *MsgCreateTopicRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTopicRequest proto.InternalMessageInfo

func (m *MsgCreateTopicRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *MsgCreateTopicRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateTopicRequest) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgCreateTopicResponse defines the Msg/CreateTopic response type.
type MsgCreateTopicResponse struct {
}

func (m *MsgCreateTopicResponse) Reset()         { *m = MsgCreateTopicResponse{} }
func (m *MsgCreateTopicResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTopicResponse) ProtoMessage()    {}
func (*MsgCreateTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{1}
}
func (m *MsgCreateTopicResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTopicResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTopicResponse.Merge(m, src)
}
func (m *MsgCreateTopicResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTopicResponse proto.InternalMessageInfo

// MsgAddWriter defines the Msg/AddWriter request type.
type MsgAddWriterRequest struct {
	TopicName     string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Moniker       string `protobuf:"bytes,2,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	WriterAddress string `protobuf:"bytes,4,opt,name=writer_address,json=writerAddress,proto3" json:"writer_address,omitempty"`
	OwnerAddress  string `protobuf:"bytes,5,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (m *MsgAddWriterRequest) Reset()         { *m = MsgAddWriterRequest{} }
func (m *MsgAddWriterRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAddWriterRequest) ProtoMessage()    {}
func (*MsgAddWriterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{2}
}
func (m *MsgAddWriterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddWriterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddWriterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddWriterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddWriterRequest.Merge(m, src)
}
func (m *MsgAddWriterRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddWriterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddWriterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddWriterRequest proto.InternalMessageInfo

func (m *MsgAddWriterRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *MsgAddWriterRequest) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *MsgAddWriterRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgAddWriterRequest) GetWriterAddress() string {
	if m != nil {
		return m.WriterAddress
	}
	return ""
}

func (m *MsgAddWriterRequest) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgAddWriter defines the Msg/AddWriter response type.
type MsgAddWriterResponse struct {
}

func (m *MsgAddWriterResponse) Reset()         { *m = MsgAddWriterResponse{} }
func (m *MsgAddWriterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddWriterResponse) ProtoMessage()    {}
func (*MsgAddWriterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{3}
}
func (m *MsgAddWriterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddWriterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddWriterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddWriterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddWriterResponse.Merge(m, src)
}
func (m *MsgAddWriterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddWriterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddWriterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddWriterResponse proto.InternalMessageInfo

// MsgDeleteWriter defines the Msg/DeleteWriter request type.
type MsgDeleteWriterRequest struct {
	TopicName     string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	WriterAddress string `protobuf:"bytes,2,opt,name=writer_address,json=writerAddress,proto3" json:"writer_address,omitempty"`
	OwnerAddress  string `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (m *MsgDeleteWriterRequest) Reset()         { *m = MsgDeleteWriterRequest{} }
func (m *MsgDeleteWriterRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWriterRequest) ProtoMessage()    {}
func (*MsgDeleteWriterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{4}
}
func (m *MsgDeleteWriterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWriterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWriterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWriterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWriterRequest.Merge(m, src)
}
func (m *MsgDeleteWriterRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWriterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWriterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWriterRequest proto.InternalMessageInfo

func (m *MsgDeleteWriterRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *MsgDeleteWriterRequest) GetWriterAddress() string {
	if m != nil {
		return m.WriterAddress
	}
	return ""
}

func (m *MsgDeleteWriterRequest) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

// MsgDeleteWriter defines the Msg/DeleteWriter response type.
type MsgDeleteWriterResponse struct {
}

func (m *MsgDeleteWriterResponse) Reset()         { *m = MsgDeleteWriterResponse{} }
func (m *MsgDeleteWriterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteWriterResponse) ProtoMessage()    {}
func (*MsgDeleteWriterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{5}
}
func (m *MsgDeleteWriterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteWriterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteWriterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteWriterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteWriterResponse.Merge(m, src)
}
func (m *MsgDeleteWriterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteWriterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteWriterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteWriterResponse proto.InternalMessageInfo

// MsgAddRecord defines the Msg/AddRecord request type.
type MsgAddRecordRequest struct {
	TopicName       string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Key             []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value           []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	WriterAddress   string `protobuf:"bytes,4,opt,name=writer_address,json=writerAddress,proto3" json:"writer_address,omitempty"`
	OwnerAddress    string `protobuf:"bytes,5,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	FeePayerAddress string `protobuf:"bytes,6,opt,name=fee_payer_address,json=feePayerAddress,proto3" json:"fee_payer_address,omitempty"`
}

func (m *MsgAddRecordRequest) Reset()         { *m = MsgAddRecordRequest{} }
func (m *MsgAddRecordRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAddRecordRequest) ProtoMessage()    {}
func (*MsgAddRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{6}
}
func (m *MsgAddRecordRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddRecordRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddRecordRequest.Merge(m, src)
}
func (m *MsgAddRecordRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddRecordRequest proto.InternalMessageInfo

func (m *MsgAddRecordRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *MsgAddRecordRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgAddRecordRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MsgAddRecordRequest) GetWriterAddress() string {
	if m != nil {
		return m.WriterAddress
	}
	return ""
}

func (m *MsgAddRecordRequest) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgAddRecordRequest) GetFeePayerAddress() string {
	if m != nil {
		return m.FeePayerAddress
	}
	return ""
}

// MsgAddRecordResponse defines the Msg/AddRecordResponse response type.
type MsgAddRecordResponse struct {
	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	TopicName    string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	Offset       uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (m *MsgAddRecordResponse) Reset()         { *m = MsgAddRecordResponse{} }
func (m *MsgAddRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddRecordResponse) ProtoMessage()    {}
func (*MsgAddRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e40917e58e4bb294, []int{7}
}
func (m *MsgAddRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddRecordResponse.Merge(m, src)
}
func (m *MsgAddRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddRecordResponse proto.InternalMessageInfo

func (m *MsgAddRecordResponse) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgAddRecordResponse) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *MsgAddRecordResponse) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgCreateTopicRequest)(nil), "panacea.aol.v2.MsgCreateTopicRequest")
	proto.RegisterType((*MsgCreateTopicResponse)(nil), "panacea.aol.v2.MsgCreateTopicResponse")
	proto.RegisterType((*MsgAddWriterRequest)(nil), "panacea.aol.v2.MsgAddWriterRequest")
	proto.RegisterType((*MsgAddWriterResponse)(nil), "panacea.aol.v2.MsgAddWriterResponse")
	proto.RegisterType((*MsgDeleteWriterRequest)(nil), "panacea.aol.v2.MsgDeleteWriterRequest")
	proto.RegisterType((*MsgDeleteWriterResponse)(nil), "panacea.aol.v2.MsgDeleteWriterResponse")
	proto.RegisterType((*MsgAddRecordRequest)(nil), "panacea.aol.v2.MsgAddRecordRequest")
	proto.RegisterType((*MsgAddRecordResponse)(nil), "panacea.aol.v2.MsgAddRecordResponse")
}

func init() { proto.RegisterFile("panacea/aol/v2/tx.proto", fileDescriptor_e40917e58e4bb294) }

var fileDescriptor_e40917e58e4bb294 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xe3, 0xa4, 0x0d, 0xca, 0x34, 0x2d, 0xb0, 0x94, 0xd4, 0x44, 0xc2, 0xaa, 0x52, 0x0a,
	0x08, 0x81, 0x2d, 0x85, 0x27, 0x28, 0x70, 0xe0, 0x12, 0x54, 0x59, 0x08, 0x24, 0x84, 0x14, 0x6d,
	0xec, 0x49, 0xb0, 0x6a, 0x7b, 0xcd, 0xee, 0x26, 0x6d, 0x0e, 0x9c, 0x78, 0x01, 0x1e, 0x88, 0x07,
	0xe0, 0xd8, 0x03, 0x07, 0x8e, 0x28, 0x79, 0x05, 0x1e, 0x00, 0x65, 0xbd, 0x89, 0xe2, 0xd8, 0x25,
	0x41, 0xea, 0xcd, 0x33, 0xfb, 0x7b, 0xe7, 0xfb, 0x77, 0x67, 0x16, 0x0e, 0x12, 0x1a, 0x53, 0x0f,
	0xa9, 0x43, 0x59, 0xe8, 0x8c, 0xda, 0x8e, 0xbc, 0xb0, 0x13, 0xce, 0x24, 0x23, 0x7b, 0x7a, 0xc1,
	0xa6, 0x2c, 0xb4, 0x47, 0xed, 0xd6, 0x17, 0xb8, 0xdb, 0x11, 0x83, 0x97, 0x1c, 0xa9, 0xc4, 0xb7,
	0x2c, 0x09, 0x3c, 0x17, 0x3f, 0x0f, 0x51, 0x48, 0x72, 0x1f, 0x40, 0xce, 0xe2, 0x6e, 0x4c, 0x23,
	0x34, 0x8d, 0x43, 0xe3, 0x71, 0xcd, 0xad, 0xa9, 0xcc, 0x1b, 0x1a, 0x21, 0x39, 0x84, 0x1d, 0x1f,
	0x85, 0xc7, 0x83, 0x44, 0x06, 0x2c, 0x36, 0xcb, 0x6a, 0x7d, 0x39, 0x45, 0x8e, 0x60, 0x97, 0x9d,
	0xc7, 0xc8, 0xbb, 0xd4, 0xf7, 0x39, 0x0a, 0x61, 0x56, 0x94, 0xa6, 0xae, 0x92, 0x27, 0x69, 0xae,
	0x65, 0x42, 0x63, 0xb5, 0xbc, 0x48, 0x58, 0x2c, 0xb0, 0xf5, 0xdd, 0x80, 0x3b, 0x1d, 0x31, 0x38,
	0xf1, 0xfd, 0xf7, 0x3c, 0x90, 0xc8, 0x37, 0xe4, 0x32, 0xe1, 0x46, 0xc4, 0xe2, 0xe0, 0x0c, 0xb9,
	0x66, 0x9a, 0x87, 0xab, 0xc4, 0x95, 0x3c, 0xf1, 0x31, 0xec, 0x9d, 0xab, 0x5a, 0x0b, 0xe4, 0x2d,
	0x25, 0xda, 0x4d, 0xb3, 0x9a, 0x39, 0x6f, 0x6c, 0xbb, 0xc0, 0x58, 0x03, 0xf6, 0xb3, 0xf4, 0xda,
	0xd6, 0x57, 0x43, 0x39, 0x7e, 0x85, 0x21, 0x4a, 0xfc, 0x2f, 0x67, 0x79, 0xba, 0xf2, 0x46, 0x74,
	0x45, 0xc7, 0x7e, 0x0f, 0x0e, 0x72, 0x10, 0x1a, 0xf0, 0xe7, 0xe2, 0xdc, 0x5d, 0xf4, 0x18, 0xf7,
	0x37, 0xa4, 0xbb, 0x05, 0x95, 0x33, 0x1c, 0x2b, 0xa4, 0xba, 0x3b, 0xfb, 0x24, 0xfb, 0xb0, 0x3d,
	0xa2, 0xe1, 0x10, 0x15, 0x40, 0xdd, 0x4d, 0x83, 0xeb, 0x3c, 0x63, 0xf2, 0x04, 0x6e, 0xf7, 0x11,
	0xbb, 0x09, 0x1d, 0x2f, 0x09, 0xab, 0x4a, 0x78, 0xb3, 0x8f, 0x78, 0x3a, 0xcb, 0xcf, 0x1d, 0xf3,
	0xf9, 0x7d, 0xcc, 0x5d, 0xa5, 0x76, 0xf3, 0x85, 0x8c, 0x82, 0x42, 0x59, 0xef, 0xe5, 0x55, 0xef,
	0x0d, 0xa8, 0xb2, 0x7e, 0x5f, 0xa0, 0x54, 0x56, 0xb7, 0x5c, 0x1d, 0xb5, 0xff, 0x94, 0xa1, 0xd2,
	0x11, 0x03, 0xf2, 0x11, 0x76, 0x96, 0x3a, 0x9c, 0x1c, 0xdb, 0xd9, 0x19, 0xb4, 0x0b, 0x07, 0xb0,
	0xf9, 0x70, 0x9d, 0x4c, 0x3b, 0x78, 0x07, 0xb5, 0x45, 0x9b, 0x91, 0xa3, 0x82, 0x9f, 0x56, 0x47,
	0xa8, 0xf9, 0xe0, 0xdf, 0x22, 0xbd, 0x6f, 0x17, 0xea, 0xcb, 0x0d, 0x42, 0x8a, 0x78, 0x0a, 0xda,
	0xb8, 0xf9, 0x68, 0xad, 0x2e, 0x03, 0x9e, 0xde, 0xc7, 0x55, 0xe0, 0x99, 0x1e, 0xbc, 0x0a, 0x3c,
	0x7b, 0xa5, 0x2f, 0x5e, 0xff, 0x98, 0x58, 0xc6, 0xe5, 0xc4, 0x32, 0x7e, 0x4f, 0x2c, 0xe3, 0xdb,
	0xd4, 0x2a, 0x5d, 0x4e, 0xad, 0xd2, 0xaf, 0xa9, 0x55, 0x3a, 0x35, 0x3e, 0x3c, 0x1d, 0x04, 0xf2,
	0xd3, 0xb0, 0x67, 0x7b, 0x2c, 0x72, 0x22, 0xf4, 0x83, 0x5e, 0xc8, 0x3c, 0x47, 0x6f, 0xfa, 0xcc,
	0x63, 0x1c, 0x9d, 0x0b, 0xf5, 0x64, 0xca, 0x71, 0x82, 0xa2, 0x57, 0x55, 0x6f, 0xe6, 0xf3, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x60, 0xa2, 0xc4, 0x4e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateTopic defines a method for creating a topic.
	CreateTopic(ctx context.Context, in *MsgCreateTopicRequest, opts ...grpc.CallOption) (*MsgCreateTopicResponse, error)
	// AddWriter defines a method for adding a writer to the topic.
	AddWriter(ctx context.Context, in *MsgAddWriterRequest, opts ...grpc.CallOption) (*MsgAddWriterResponse, error)
	// DeleteWriter defines a method for deleting a writer to the topic.
	DeleteWriter(ctx context.Context, in *MsgDeleteWriterRequest, opts ...grpc.CallOption) (*MsgDeleteWriterResponse, error)
	// AddRecord defines a method for adding a record to the topic with the
	// writer.
	AddRecord(ctx context.Context, in *MsgAddRecordRequest, opts ...grpc.CallOption) (*MsgAddRecordResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateTopic(ctx context.Context, in *MsgCreateTopicRequest, opts ...grpc.CallOption) (*MsgCreateTopicResponse, error) {
	out := new(MsgCreateTopicResponse)
	err := c.cc.Invoke(ctx, "/panacea.aol.v2.Msg/CreateTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddWriter(ctx context.Context, in *MsgAddWriterRequest, opts ...grpc.CallOption) (*MsgAddWriterResponse, error) {
	out := new(MsgAddWriterResponse)
	err := c.cc.Invoke(ctx, "/panacea.aol.v2.Msg/AddWriter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteWriter(ctx context.Context, in *MsgDeleteWriterRequest, opts ...grpc.CallOption) (*MsgDeleteWriterResponse, error) {
	out := new(MsgDeleteWriterResponse)
	err := c.cc.Invoke(ctx, "/panacea.aol.v2.Msg/DeleteWriter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddRecord(ctx context.Context, in *MsgAddRecordRequest, opts ...grpc.CallOption) (*MsgAddRecordResponse, error) {
	out := new(MsgAddRecordResponse)
	err := c.cc.Invoke(ctx, "/panacea.aol.v2.Msg/AddRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateTopic defines a method for creating a topic.
	CreateTopic(context.Context, *MsgCreateTopicRequest) (*MsgCreateTopicResponse, error)
	// AddWriter defines a method for adding a writer to the topic.
	AddWriter(context.Context, *MsgAddWriterRequest) (*MsgAddWriterResponse, error)
	// DeleteWriter defines a method for deleting a writer to the topic.
	DeleteWriter(context.Context, *MsgDeleteWriterRequest) (*MsgDeleteWriterResponse, error)
	// AddRecord defines a method for adding a record to the topic with the
	// writer.
	AddRecord(context.Context, *MsgAddRecordRequest) (*MsgAddRecordResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateTopic(ctx context.Context, req *MsgCreateTopicRequest) (*MsgCreateTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTopic not implemented")
}
func (*UnimplementedMsgServer) AddWriter(ctx context.Context, req *MsgAddWriterRequest) (*MsgAddWriterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWriter not implemented")
}
func (*UnimplementedMsgServer) DeleteWriter(ctx context.Context, req *MsgDeleteWriterRequest) (*MsgDeleteWriterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWriter not implemented")
}
func (*UnimplementedMsgServer) AddRecord(ctx context.Context, req *MsgAddRecordRequest) (*MsgAddRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRecord not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.aol.v2.Msg/CreateTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTopic(ctx, req.(*MsgCreateTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddWriter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddWriterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddWriter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.aol.v2.Msg/AddWriter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddWriter(ctx, req.(*MsgAddWriterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteWriter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteWriterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteWriter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.aol.v2.Msg/DeleteWriter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteWriter(ctx, req.(*MsgDeleteWriterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.aol.v2.Msg/AddRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddRecord(ctx, req.(*MsgAddRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "panacea.aol.v2.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTopic",
			Handler:    _Msg_CreateTopic_Handler,
		},
		{
			MethodName: "AddWriter",
			Handler:    _Msg_AddWriter_Handler,
		},
		{
			MethodName: "DeleteWriter",
			Handler:    _Msg_DeleteWriter_Handler,
		},
		{
			MethodName: "AddRecord",
			Handler:    _Msg_AddRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "panacea/aol/v2/tx.proto",
}

func (m *MsgCreateTopicRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTopicRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTopicRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTopicResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTopicResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTopicResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddWriterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddWriterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddWriterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WriterAddress) > 0 {
		i -= len(m.WriterAddress)
		copy(dAtA[i:], m.WriterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WriterAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddWriterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddWriterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddWriterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWriterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWriterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWriterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.WriterAddress) > 0 {
		i -= len(m.WriterAddress)
		copy(dAtA[i:], m.WriterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WriterAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteWriterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteWriterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteWriterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddRecordRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddRecordRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddRecordRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeePayerAddress) > 0 {
		i -= len(m.FeePayerAddress)
		copy(dAtA[i:], m.FeePayerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FeePayerAddress)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.WriterAddress) > 0 {
		i -= len(m.WriterAddress)
		copy(dAtA[i:], m.WriterAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WriterAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Offset != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TopicName) > 0 {
		i -= len(m.TopicName)
		copy(dAtA[i:], m.TopicName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TopicName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateTopicRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTopicResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddWriterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WriterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddWriterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteWriterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WriterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteWriterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddRecordRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WriterAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FeePayerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TopicName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovTx(uint64(m.Offset))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateTopicRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTopicRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTopicRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTopicResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTopicResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddWriterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddWriterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddWriterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WriterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddWriterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddWriterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddWriterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWriterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWriterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWriterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WriterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteWriterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteWriterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteWriterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddRecordRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddRecordRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddRecordRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = append(m.Key[:0], dAtA[iNdEx:postIndex]...)
			if m.Key == nil {
				m.Key = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = append(m.Value[:0], dAtA[iNdEx:postIndex]...)
			if m.Value == nil {
				m.Value = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriterAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WriterAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeePayerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeePayerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
