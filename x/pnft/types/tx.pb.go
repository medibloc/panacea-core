// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: panacea/pnft/v2/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgServiceCreateDenomRequest struct {
	Denom *Denom `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
}

func (m *MsgServiceCreateDenomRequest) Reset()         { *m = MsgServiceCreateDenomRequest{} }
func (m *MsgServiceCreateDenomRequest) String() string { return proto.CompactTextString(m) }
func (*MsgServiceCreateDenomRequest) ProtoMessage()    {}
func (*MsgServiceCreateDenomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{0}
}
func (m *MsgServiceCreateDenomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceCreateDenomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceCreateDenomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceCreateDenomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceCreateDenomRequest.Merge(m, src)
}
func (m *MsgServiceCreateDenomRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceCreateDenomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceCreateDenomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceCreateDenomRequest proto.InternalMessageInfo

func (m *MsgServiceCreateDenomRequest) GetDenom() *Denom {
	if m != nil {
		return m.Denom
	}
	return nil
}

type MsgServiceCreateDenomResponse struct {
}

func (m *MsgServiceCreateDenomResponse) Reset()         { *m = MsgServiceCreateDenomResponse{} }
func (m *MsgServiceCreateDenomResponse) String() string { return proto.CompactTextString(m) }
func (*MsgServiceCreateDenomResponse) ProtoMessage()    {}
func (*MsgServiceCreateDenomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{1}
}
func (m *MsgServiceCreateDenomResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceCreateDenomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceCreateDenomResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceCreateDenomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceCreateDenomResponse.Merge(m, src)
}
func (m *MsgServiceCreateDenomResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceCreateDenomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceCreateDenomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceCreateDenomResponse proto.InternalMessageInfo

type MsgServiceUpdateDenomRequest struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol      string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Uri         string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	UriHash     string `protobuf:"bytes,6,opt,name=uri_hash,json=uriHash,proto3" json:"uri_hash,omitempty"`
	Data        string `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Updater     string `protobuf:"bytes,8,opt,name=updater,proto3" json:"updater,omitempty"`
}

func (m *MsgServiceUpdateDenomRequest) Reset()         { *m = MsgServiceUpdateDenomRequest{} }
func (m *MsgServiceUpdateDenomRequest) String() string { return proto.CompactTextString(m) }
func (*MsgServiceUpdateDenomRequest) ProtoMessage()    {}
func (*MsgServiceUpdateDenomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{2}
}
func (m *MsgServiceUpdateDenomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceUpdateDenomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceUpdateDenomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceUpdateDenomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceUpdateDenomRequest.Merge(m, src)
}
func (m *MsgServiceUpdateDenomRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceUpdateDenomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceUpdateDenomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceUpdateDenomRequest proto.InternalMessageInfo

func (m *MsgServiceUpdateDenomRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetUriHash() string {
	if m != nil {
		return m.UriHash
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *MsgServiceUpdateDenomRequest) GetUpdater() string {
	if m != nil {
		return m.Updater
	}
	return ""
}

type MsgServiceUpdateDenomResponse struct {
}

func (m *MsgServiceUpdateDenomResponse) Reset()         { *m = MsgServiceUpdateDenomResponse{} }
func (m *MsgServiceUpdateDenomResponse) String() string { return proto.CompactTextString(m) }
func (*MsgServiceUpdateDenomResponse) ProtoMessage()    {}
func (*MsgServiceUpdateDenomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{3}
}
func (m *MsgServiceUpdateDenomResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceUpdateDenomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceUpdateDenomResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceUpdateDenomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceUpdateDenomResponse.Merge(m, src)
}
func (m *MsgServiceUpdateDenomResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceUpdateDenomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceUpdateDenomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceUpdateDenomResponse proto.InternalMessageInfo

type MsgServiceDeleteDenomRequest struct {
	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Remover string `protobuf:"bytes,2,opt,name=remover,proto3" json:"remover,omitempty"`
}

func (m *MsgServiceDeleteDenomRequest) Reset()         { *m = MsgServiceDeleteDenomRequest{} }
func (m *MsgServiceDeleteDenomRequest) String() string { return proto.CompactTextString(m) }
func (*MsgServiceDeleteDenomRequest) ProtoMessage()    {}
func (*MsgServiceDeleteDenomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{4}
}
func (m *MsgServiceDeleteDenomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceDeleteDenomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceDeleteDenomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceDeleteDenomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceDeleteDenomRequest.Merge(m, src)
}
func (m *MsgServiceDeleteDenomRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceDeleteDenomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceDeleteDenomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceDeleteDenomRequest proto.InternalMessageInfo

func (m *MsgServiceDeleteDenomRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgServiceDeleteDenomRequest) GetRemover() string {
	if m != nil {
		return m.Remover
	}
	return ""
}

type MsgServiceDeleteDenomResponse struct {
}

func (m *MsgServiceDeleteDenomResponse) Reset()         { *m = MsgServiceDeleteDenomResponse{} }
func (m *MsgServiceDeleteDenomResponse) String() string { return proto.CompactTextString(m) }
func (*MsgServiceDeleteDenomResponse) ProtoMessage()    {}
func (*MsgServiceDeleteDenomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{5}
}
func (m *MsgServiceDeleteDenomResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceDeleteDenomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceDeleteDenomResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceDeleteDenomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceDeleteDenomResponse.Merge(m, src)
}
func (m *MsgServiceDeleteDenomResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceDeleteDenomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceDeleteDenomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceDeleteDenomResponse proto.InternalMessageInfo

type MsgServiceTransferDenomRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sender   string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgServiceTransferDenomRequest) Reset()         { *m = MsgServiceTransferDenomRequest{} }
func (m *MsgServiceTransferDenomRequest) String() string { return proto.CompactTextString(m) }
func (*MsgServiceTransferDenomRequest) ProtoMessage()    {}
func (*MsgServiceTransferDenomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{6}
}
func (m *MsgServiceTransferDenomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceTransferDenomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceTransferDenomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceTransferDenomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceTransferDenomRequest.Merge(m, src)
}
func (m *MsgServiceTransferDenomRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceTransferDenomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceTransferDenomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceTransferDenomRequest proto.InternalMessageInfo

func (m *MsgServiceTransferDenomRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgServiceTransferDenomRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgServiceTransferDenomRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgServiceTransferDenomResponse struct {
}

func (m *MsgServiceTransferDenomResponse) Reset()         { *m = MsgServiceTransferDenomResponse{} }
func (m *MsgServiceTransferDenomResponse) String() string { return proto.CompactTextString(m) }
func (*MsgServiceTransferDenomResponse) ProtoMessage()    {}
func (*MsgServiceTransferDenomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da49c5b4a63605b2, []int{7}
}
func (m *MsgServiceTransferDenomResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgServiceTransferDenomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgServiceTransferDenomResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgServiceTransferDenomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgServiceTransferDenomResponse.Merge(m, src)
}
func (m *MsgServiceTransferDenomResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgServiceTransferDenomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgServiceTransferDenomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgServiceTransferDenomResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgServiceCreateDenomRequest)(nil), "panacea.pnft.v2.MsgServiceCreateDenomRequest")
	proto.RegisterType((*MsgServiceCreateDenomResponse)(nil), "panacea.pnft.v2.MsgServiceCreateDenomResponse")
	proto.RegisterType((*MsgServiceUpdateDenomRequest)(nil), "panacea.pnft.v2.MsgServiceUpdateDenomRequest")
	proto.RegisterType((*MsgServiceUpdateDenomResponse)(nil), "panacea.pnft.v2.MsgServiceUpdateDenomResponse")
	proto.RegisterType((*MsgServiceDeleteDenomRequest)(nil), "panacea.pnft.v2.MsgServiceDeleteDenomRequest")
	proto.RegisterType((*MsgServiceDeleteDenomResponse)(nil), "panacea.pnft.v2.MsgServiceDeleteDenomResponse")
	proto.RegisterType((*MsgServiceTransferDenomRequest)(nil), "panacea.pnft.v2.MsgServiceTransferDenomRequest")
	proto.RegisterType((*MsgServiceTransferDenomResponse)(nil), "panacea.pnft.v2.MsgServiceTransferDenomResponse")
}

func init() { proto.RegisterFile("panacea/pnft/v2/tx.proto", fileDescriptor_da49c5b4a63605b2) }

var fileDescriptor_da49c5b4a63605b2 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe3, 0xa4, 0x4d, 0xc2, 0x44, 0xfc, 0xd1, 0x1e, 0xaa, 0xc5, 0x02, 0xb7, 0xe4, 0xc4,
	0x81, 0xd8, 0x28, 0xbc, 0x01, 0xf4, 0x50, 0x24, 0x90, 0x50, 0x81, 0x0b, 0x17, 0xb4, 0xf1, 0x4e,
	0x9b, 0x95, 0x62, 0xaf, 0xd9, 0x5d, 0x47, 0xed, 0x5b, 0xf0, 0x58, 0x88, 0x53, 0x6f, 0x70, 0x44,
	0xc9, 0x8b, 0xa0, 0xdd, 0x35, 0xad, 0x9d, 0xa4, 0xa6, 0xb7, 0x9d, 0x99, 0xcf, 0xf3, 0xdb, 0x6f,
	0x67, 0x64, 0xa0, 0x05, 0xcb, 0x59, 0x8a, 0x2c, 0x29, 0xf2, 0x33, 0x93, 0x2c, 0xa7, 0x89, 0xb9,
	0x88, 0x0b, 0x25, 0x8d, 0x24, 0x0f, 0xab, 0x4a, 0x6c, 0x2b, 0xf1, 0x72, 0x1a, 0x86, 0x9b, 0x52,
	0x57, 0x70, 0xe2, 0xf1, 0x3b, 0x78, 0xf2, 0x5e, 0x9f, 0x7f, 0x44, 0xb5, 0x14, 0x29, 0xbe, 0x51,
	0xc8, 0x0c, 0x1e, 0x63, 0x2e, 0xb3, 0x53, 0xfc, 0x56, 0xa2, 0x36, 0xe4, 0x05, 0xec, 0x73, 0x1b,
	0xd3, 0xe0, 0x28, 0x78, 0x3e, 0x9a, 0x1e, 0xc4, 0x1b, 0xcd, 0x63, 0xaf, 0xf6, 0xa2, 0xf1, 0x21,
	0x3c, 0xbd, 0xa5, 0x9b, 0x2e, 0x64, 0xae, 0x71, 0xfc, 0x2b, 0xa8, 0xf3, 0x3e, 0x17, 0x7c, 0x93,
	0xf7, 0x00, 0xba, 0x82, 0x3b, 0xd8, 0xbd, 0xd3, 0xae, 0xe0, 0x84, 0xc0, 0x5e, 0xce, 0x32, 0xa4,
	0x5d, 0x97, 0x71, 0x67, 0x72, 0x00, 0x7d, 0x7d, 0x99, 0xcd, 0xe4, 0x82, 0xf6, 0x5c, 0xb6, 0x8a,
	0xc8, 0x11, 0x8c, 0x38, 0xea, 0x54, 0x89, 0xc2, 0x08, 0x99, 0xd3, 0x3d, 0x57, 0xac, 0xa7, 0xc8,
	0x23, 0xe8, 0x95, 0x4a, 0xd0, 0x7d, 0x57, 0xb1, 0x47, 0xf2, 0x18, 0x86, 0xa5, 0x12, 0x5f, 0xe7,
	0x4c, 0xcf, 0x69, 0xdf, 0xa5, 0x07, 0xa5, 0x12, 0x27, 0x4c, 0xcf, 0x2d, 0x9a, 0x33, 0xc3, 0xe8,
	0xc0, 0xa3, 0xed, 0x99, 0x50, 0x18, 0x94, 0xee, 0xd2, 0x8a, 0x0e, 0x2b, 0xb5, 0x0f, 0x9b, 0xd6,
	0x1b, 0xc6, 0x2a, 0xeb, 0x27, 0x75, 0xe7, 0xc7, 0xb8, 0xc0, 0xff, 0x38, 0xa7, 0x30, 0x50, 0x98,
	0xc9, 0x25, 0xaa, 0xca, 0xfc, 0xbf, 0xb0, 0x89, 0x6a, 0x74, 0xaa, 0x50, 0x1c, 0xa2, 0x1b, 0xc1,
	0x27, 0xc5, 0x72, 0x7d, 0x86, 0xaa, 0x15, 0x66, 0x9f, 0x14, 0x73, 0x7e, 0xcd, 0xaa, 0x22, 0x12,
	0xc2, 0x50, 0x61, 0x8a, 0xc2, 0xde, 0xc2, 0x3f, 0xf6, 0x75, 0x3c, 0x7e, 0x06, 0x87, 0xb7, 0x52,
	0xfc, 0x45, 0xa6, 0x3f, 0x7b, 0x00, 0x37, 0x1a, 0xb2, 0x80, 0x51, 0x6d, 0x29, 0xc8, 0x64, 0x6b,
	0x99, 0xda, 0x56, 0x31, 0x8c, 0xef, 0x2a, 0xf7, 0x70, 0x4b, 0xab, 0xcd, 0xa1, 0x95, 0xb6, 0xbd,
	0x88, 0xad, 0xb4, 0x1d, 0xe3, 0xb5, 0xb4, 0xda, 0x28, 0x5a, 0x69, 0xdb, 0xc3, 0x6f, 0xa5, 0xed,
	0x98, 0x30, 0x51, 0x70, 0xbf, 0xf1, 0xe2, 0x24, 0x69, 0x69, 0xb0, 0x6b, 0x03, 0xc2, 0x97, 0x77,
	0xff, 0xc0, 0x33, 0x5f, 0xbf, 0xfd, 0xb1, 0x8a, 0x82, 0xab, 0x55, 0x14, 0xfc, 0x59, 0x45, 0xc1,
	0xf7, 0x75, 0xd4, 0xb9, 0x5a, 0x47, 0x9d, 0xdf, 0xeb, 0xa8, 0xf3, 0x21, 0xf8, 0x32, 0x39, 0x17,
	0x66, 0x5e, 0xce, 0xe2, 0x54, 0x66, 0x49, 0x86, 0x5c, 0xcc, 0x16, 0x32, 0x4d, 0x2a, 0xc0, 0x24,
	0x95, 0x0a, 0x93, 0x0b, 0xff, 0xf7, 0x31, 0x97, 0x05, 0xea, 0x59, 0xdf, 0xfd, 0x7c, 0x5e, 0xfd,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x20, 0x79, 0xb5, 0xc5, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgServiceClient is the client API for MsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgServiceClient interface {
	CreateDenom(ctx context.Context, in *MsgServiceCreateDenomRequest, opts ...grpc.CallOption) (*MsgServiceCreateDenomResponse, error)
	UpdateDenom(ctx context.Context, in *MsgServiceUpdateDenomRequest, opts ...grpc.CallOption) (*MsgServiceUpdateDenomResponse, error)
	DeleteDenom(ctx context.Context, in *MsgServiceDeleteDenomRequest, opts ...grpc.CallOption) (*MsgServiceDeleteDenomResponse, error)
	TransferDenom(ctx context.Context, in *MsgServiceTransferDenomRequest, opts ...grpc.CallOption) (*MsgServiceTransferDenomResponse, error)
}

type msgServiceClient struct {
	cc grpc1.ClientConn
}

func NewMsgServiceClient(cc grpc1.ClientConn) MsgServiceClient {
	return &msgServiceClient{cc}
}

func (c *msgServiceClient) CreateDenom(ctx context.Context, in *MsgServiceCreateDenomRequest, opts ...grpc.CallOption) (*MsgServiceCreateDenomResponse, error) {
	out := new(MsgServiceCreateDenomResponse)
	err := c.cc.Invoke(ctx, "/panacea.pnft.v2.MsgService/CreateDenom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgServiceClient) UpdateDenom(ctx context.Context, in *MsgServiceUpdateDenomRequest, opts ...grpc.CallOption) (*MsgServiceUpdateDenomResponse, error) {
	out := new(MsgServiceUpdateDenomResponse)
	err := c.cc.Invoke(ctx, "/panacea.pnft.v2.MsgService/UpdateDenom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgServiceClient) DeleteDenom(ctx context.Context, in *MsgServiceDeleteDenomRequest, opts ...grpc.CallOption) (*MsgServiceDeleteDenomResponse, error) {
	out := new(MsgServiceDeleteDenomResponse)
	err := c.cc.Invoke(ctx, "/panacea.pnft.v2.MsgService/DeleteDenom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgServiceClient) TransferDenom(ctx context.Context, in *MsgServiceTransferDenomRequest, opts ...grpc.CallOption) (*MsgServiceTransferDenomResponse, error) {
	out := new(MsgServiceTransferDenomResponse)
	err := c.cc.Invoke(ctx, "/panacea.pnft.v2.MsgService/TransferDenom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServiceServer is the server API for MsgService service.
type MsgServiceServer interface {
	CreateDenom(context.Context, *MsgServiceCreateDenomRequest) (*MsgServiceCreateDenomResponse, error)
	UpdateDenom(context.Context, *MsgServiceUpdateDenomRequest) (*MsgServiceUpdateDenomResponse, error)
	DeleteDenom(context.Context, *MsgServiceDeleteDenomRequest) (*MsgServiceDeleteDenomResponse, error)
	TransferDenom(context.Context, *MsgServiceTransferDenomRequest) (*MsgServiceTransferDenomResponse, error)
}

// UnimplementedMsgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServiceServer struct {
}

func (*UnimplementedMsgServiceServer) CreateDenom(ctx context.Context, req *MsgServiceCreateDenomRequest) (*MsgServiceCreateDenomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDenom not implemented")
}
func (*UnimplementedMsgServiceServer) UpdateDenom(ctx context.Context, req *MsgServiceUpdateDenomRequest) (*MsgServiceUpdateDenomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDenom not implemented")
}
func (*UnimplementedMsgServiceServer) DeleteDenom(ctx context.Context, req *MsgServiceDeleteDenomRequest) (*MsgServiceDeleteDenomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDenom not implemented")
}
func (*UnimplementedMsgServiceServer) TransferDenom(ctx context.Context, req *MsgServiceTransferDenomRequest) (*MsgServiceTransferDenomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferDenom not implemented")
}

func RegisterMsgServiceServer(s grpc1.Server, srv MsgServiceServer) {
	s.RegisterService(&_MsgService_serviceDesc, srv)
}

func _MsgService_CreateDenom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgServiceCreateDenomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).CreateDenom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.pnft.v2.MsgService/CreateDenom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).CreateDenom(ctx, req.(*MsgServiceCreateDenomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgService_UpdateDenom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgServiceUpdateDenomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).UpdateDenom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.pnft.v2.MsgService/UpdateDenom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).UpdateDenom(ctx, req.(*MsgServiceUpdateDenomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgService_DeleteDenom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgServiceDeleteDenomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).DeleteDenom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.pnft.v2.MsgService/DeleteDenom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).DeleteDenom(ctx, req.(*MsgServiceDeleteDenomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgService_TransferDenom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgServiceTransferDenomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).TransferDenom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/panacea.pnft.v2.MsgService/TransferDenom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).TransferDenom(ctx, req.(*MsgServiceTransferDenomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "panacea.pnft.v2.MsgService",
	HandlerType: (*MsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDenom",
			Handler:    _MsgService_CreateDenom_Handler,
		},
		{
			MethodName: "UpdateDenom",
			Handler:    _MsgService_UpdateDenom_Handler,
		},
		{
			MethodName: "DeleteDenom",
			Handler:    _MsgService_DeleteDenom_Handler,
		},
		{
			MethodName: "TransferDenom",
			Handler:    _MsgService_TransferDenom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "panacea/pnft/v2/tx.proto",
}

func (m *MsgServiceCreateDenomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceCreateDenomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceCreateDenomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Denom != nil {
		{
			size, err := m.Denom.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgServiceCreateDenomResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceCreateDenomResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceCreateDenomResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgServiceUpdateDenomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceUpdateDenomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceUpdateDenomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Updater) > 0 {
		i -= len(m.Updater)
		copy(dAtA[i:], m.Updater)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Updater)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.UriHash) > 0 {
		i -= len(m.UriHash)
		copy(dAtA[i:], m.UriHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UriHash)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Symbol) > 0 {
		i -= len(m.Symbol)
		copy(dAtA[i:], m.Symbol)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Symbol)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgServiceUpdateDenomResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceUpdateDenomResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceUpdateDenomResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgServiceDeleteDenomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceDeleteDenomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceDeleteDenomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Remover) > 0 {
		i -= len(m.Remover)
		copy(dAtA[i:], m.Remover)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Remover)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgServiceDeleteDenomResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceDeleteDenomResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceDeleteDenomResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgServiceTransferDenomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceTransferDenomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceTransferDenomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgServiceTransferDenomResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgServiceTransferDenomResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgServiceTransferDenomResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgServiceCreateDenomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Denom != nil {
		l = m.Denom.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgServiceCreateDenomResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgServiceUpdateDenomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Symbol)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UriHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Updater)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgServiceUpdateDenomResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgServiceDeleteDenomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Remover)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgServiceDeleteDenomResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgServiceTransferDenomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgServiceTransferDenomResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgServiceCreateDenomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceCreateDenomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceCreateDenomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Denom == nil {
				m.Denom = &Denom{}
			}
			if err := m.Denom.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceCreateDenomResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceCreateDenomResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceCreateDenomResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceUpdateDenomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceUpdateDenomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceUpdateDenomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Symbol = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UriHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UriHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updater", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Updater = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceUpdateDenomResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceUpdateDenomResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceUpdateDenomResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceDeleteDenomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceDeleteDenomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceDeleteDenomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Remover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Remover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceDeleteDenomResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceDeleteDenomResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceDeleteDenomResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceTransferDenomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceTransferDenomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceTransferDenomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgServiceTransferDenomResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgServiceTransferDenomResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgServiceTransferDenomResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
