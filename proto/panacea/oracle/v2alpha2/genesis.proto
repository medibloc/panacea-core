syntax = "proto3";
package panacea.oracle.v2alpha2;

option go_package = "github.com/medibloc/panacea-core/v2/x/oracle/types";

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "panacea/oracle/v2alpha2/oracle.proto";

// GenesisState defines the oracle module's genesis state.
message GenesisState {
  repeated Oracle oracles = 1 [(gogoproto.nullable) = false];
  repeated OracleRegistration oracle_registrations = 2 [(gogoproto.nullable) = false];
  repeated OracleRegistrationVote oracle_registration_votes = 3 [(gogoproto.nullable) = false];
  Params params = 4 [(gogoproto.nullable) = false];
  OracleUpgradeInfo oracle_upgrade_info = 5;
  repeated OracleRegistrationVoteQueueElement oracle_registration_vote_queue_elements = 6 [(gogoproto.nullable) = false];
}

// Params defines the oracle module's params.
message Params {
  // A base64-encoded oracle public key which is paired with an oracle private key generated in SGX by the first oracle.
  // This key is used to encrypt data, so that the data can be decrypted and verified securely only in SGX
  string oracle_public_key = 1;
  // A base64-encoded SGX remote report which contains an oracle public key.
  // Using this report, anyone can validate that the oracle key pair was generated in SGX.
  string oracle_pub_key_remote_report = 2;
  // The unique ID of current version of oracle.
  string unique_id = 3;
  // Oracle commission rate on validating and delivering data
  string oracle_commission_rate = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  VoteParams vote_params = 5 [(gogoproto.nullable) = false];
  SlashParams slash_params = 6 [(gogoproto.nullable) = false];
}

// Vote Params defines the params related to voting.
message VoteParams {
  google.protobuf.Duration voting_period = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"voting_period\""
  ];
  google.protobuf.Duration jail_period = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"jail_period\""
  ];
  string threshold = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// SlashParams defines the params related to slashing of oracle.
message SlashParams {
  string slash_fraction_downtime = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string slash_fraction_forgery = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// OracleRegistrationVoteQueueElement defines a oracle registration vote queue.
message OracleRegistrationVoteQueueElement {
  string unique_id = 1;
  bytes address = 2;
  google.protobuf.Timestamp voting_end_time = 3 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"voting_end_time\""
  ];
}