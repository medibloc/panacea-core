syntax = "proto3";
package panacea.oracle.v2alpha2;

option go_package = "github.com/medibloc/panacea-core/v2/x/oracle/types";

import "gogoproto/gogo.proto";

// Tally defines the information needed to count votes.
message Tally {
  map<string, OracleValidatorInfo> oracle_validator_infos = 1; // Oracle's validator information.
  map<string, ConsensusTally> yes = 2; // Set a voting results according to ConsensusValue
  string no = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string total = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false]; // Save the total votingPower of OracleValidators
}

// ConsensusTally defines the value of the voted consensus
message ConsensusTally {
  bytes consensus_key = 1; // Set a consensus key
  string voting_amount = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false]; // Set the voted value
}
// OracleValidatorInfo defines Oracle and Validator information
message OracleValidatorInfo {
  string address = 1;
  bool oracle_activated = 2;
  string bonded_tokens = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  bool validator_jailed = 4;
}