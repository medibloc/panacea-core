syntax = "proto3";
package panacea.datadeal.v2alpha1;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "panacea/datadeal/v2alpha1/deal.proto";
import "panacea/datadeal/v2alpha1/tx.proto";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/medibloc/panacea-core/v2/x/datadeal/types";

// Query defines the gRPC querier service.
service Query {
  // Deal returns a Deal.
  rpc Deal(QueryDealRequest) returns (QueryDealResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2alpha1/deals/{deal_id}";
  }
  // Deals returns multiple deals
  rpc Deals(QueryDealsRequest) returns (QueryDealsResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2alpha1/deals";
  }
  // DataCert returns a DataCert.
  rpc DataCert(QueryDataCertRequest) returns (QueryDataCertResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2alpha1/deals/{deal_id}/data_certs/{data_hash}";
  }
  // DataCerts return DataCerts.
  rpc DataCerts(QueryDataCertsRequest) returns (QueryDataCertsResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2alpha1/deals/{deal_id}/data_certs";
  }
}

// QueryDealRequest is the request type for Query/Deal RPC method.
message QueryDealRequest {
  uint64 deal_id = 1;
}

// QueryDealResponse is the response type for the Query/Deal RPC method.
message QueryDealResponse {
  Deal deal = 1;
}

// QueryDealsRequest is the request type for Query/Deals RPC method.
message QueryDealsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryDealsResponse is the response type for Query/Deals RPC method.
message QueryDealsResponse {
  repeated Deal deals = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDataCertRequest is the request type for Query/DataCert RPC method.
message QueryDataCertRequest {
  uint64 deal_id = 1;
  string data_hash = 2;
}

// QueryDataCertResponse is the response type for Query/DataCert RPC method.
message QueryDataCertResponse {
  DataCert data_cert = 1;
}

// QueryDataCertsRequest is the request type for Query/DataCerts RPC method.
message QueryDataCertsRequest {
  uint64 deal_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDataCertsResponse is the response type for Query/DataCerts RPC method.
message QueryDataCertsResponse {
  repeated DataCert data_certs = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}