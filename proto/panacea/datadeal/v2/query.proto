syntax = "proto3";
package panacea.datadeal.v2;

option go_package = "github.com/medibloc/panacea-core/x/datadeal/types";

import "gogoproto/gogo.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "panacea/datadeal/v2/deal.proto";
import "panacea/datadeal/v2/certificate.proto";

// Query defines the gRPC querier service.
service Query {
  // Deals return a list of Deal.
  rpc Deals(QueryDealsRequest) returns (QueryDealsResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2/deals";
  }

  // Deal returns a Deal.
  rpc Deal(QueryDealRequest) returns (QueryDealResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2/deals/{deal_id}";
  }

  // Certificates returns a list of Certificate.
  rpc Certificates(QueryCertificates) returns (QueryCertificatesResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2/deals/{deal_id}/certificates";
  }

  // Certificate returns a Certificate
  rpc Certificate(QueryCertificate) returns (QueryCertificateResponse) {
    option (google.api.http).get = "/panacea/datadeal/v2/deals/{deal_id}/certificates/{data_hash}";
  }


}

// QueryDealsRequest defines the request type for the Query/Deals RPC method.
message QueryDealsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryDealsResponse defines the response type for the Query/Deals RPC method.
message QueryDealsResponse {
  repeated Deal deal = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDealRequest defines the request type for the Query/Deal RPC method.
message QueryDealRequest {
  uint64 deal_id = 1;
}

// QueryDealResponse defines the response type for the Query/Deal RPC method.
message QueryDealResponse {
  Deal deal = 1;
}

// QueryDealsRequest defines the request type for the Query/Deals RPC method.
message QueryCertificates {
  int64 deal_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDealsResponse defines the response type for the Query/Deals RPC method.
message QueryCertificatesResponse {
  repeated Certificate certificates = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryCertificate defines the request type for the Query/Certificate RPC method.
message QueryCertificate {
  uint64 deal_id = 1;
  string data_hash = 2;
}

// QueryCertificateResponse defines the response type for the Query/Certificate RPC method.
message QueryCertificateResponse {
  Certificate certificate = 1;
}

