syntax = "proto3";
package panacea.datadeal.v2;

option go_package = "github.com/medibloc/panacea-core/x/datadeal/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "panacea/datadeal/v2/deal.proto";
import "panacea/datadeal/v2/consent.proto";

// Msg defines the Msg service.
service Msg {
  // CreateDeal defines a method for creating a deal.
  rpc CreateDeal(MsgCreateDeal) returns (MsgCreateDealResponse);

  // DeactivateDeal defines a method for deactivating the deal.
  rpc DeactivateDeal(MsgDeactivateDeal) returns (MsgDeactivateDealResponse);

  // SubmitConsent defines a method for provider's submit consent
  rpc SubmitConsent(MsgSubmitConsent) returns (MsgSubmitConsentResponse);
}

// MsgCreateDeal defines the Msg/CreateDeal request type.
message MsgCreateDeal {
  repeated string data_schema = 1;
  cosmos.base.v1beta1.Coin budget = 2;
  uint64 max_num_data = 3;
  string consumer_address = 4;
  repeated AgreementTerm agreement_terms = 5;
}

// MsgCreateDealResponse defines the Msg/CreateDeal response type.
message MsgCreateDealResponse {
  uint64 deal_id = 1;
}

// MsgDeactivateDeal defines the Msg/DeactivateDeal request type.
message MsgDeactivateDeal {
  uint64 deal_id = 1;
  string requester_address = 2;
}

// MsgDeactivateDealResponse defines the Msg/DeactivateDeal response type.
message MsgDeactivateDealResponse {
}

// MsgSubmitConsent defines the Msg/SubmitConsent request type.
message MsgSubmitConsent {
  Consent consent = 1;
}

// MsgSubmitConsentResponse defines the Msg/SubmitConsent response type.
message MsgSubmitConsentResponse {
}