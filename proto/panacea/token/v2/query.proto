syntax = "proto3";
package panacea.token.v2;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "panacea/token/v2/token.proto";

option java_multiple_files = true;
option go_package = "github.com/medibloc/panacea-core/x/token/types";

// Query defines the gRPC querier service.
service Query {
	// Token returns token details.
	rpc Token(QueryTokenRequest) returns (QueryTokenResponse) {
		option (google.api.http).get = "/panacea/token/v2/tokens/{symbol}";
	}

	// Tokens returns details of all tokens.
	rpc Tokens(QueryTokensRequest) returns (QueryTokensResponse) {
		option (google.api.http).get = "/panacea/token/v2/tokens";
	}
}

// QueryTokenRequest is the request type for the Query/Token RPC method.
message QueryTokenRequest {
	string symbol = 1;
}

// QueryTokenResponse is the response type for the Query/Token RPC method.
message QueryTokenResponse {
	Token token = 1;
}

// QueryTokensRequest is the request type for the Query/Tokens RPC method.
message QueryTokensRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTokensResponse is the response type for the Query/Tokens RPC method.
message QueryTokensResponse {
	repeated Token token = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
