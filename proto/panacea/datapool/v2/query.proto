syntax = "proto3";
package panacea.datapool.v2;

option go_package = "github.com/medibloc/panacea-core/x/datapool/types";

import "google/api/annotations.proto";
import "panacea/datapool/v2/pool.proto";

// Query defines the gRPC querier service.
service Query {
  // Pool returns a Pool.
  rpc Pool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/panacea/datapool/v2/pools/{pool_id}";
  }

  // DataValidator returns a DataValidator.
  rpc DataValidator(QueryDataValidatorRequest) returns (QueryDataValidatorResponse) {
    option (google.api.http).get = "/panacea/datapool/v2/data_validator";
  }
}

// QueryPoolRequest is the request type for the Query/Pool RPC method.
message QueryPoolRequest {
  uint64 pool_id = 1;
}

// QueryPoolResponse is the response type for the Query/Pool RPC method.
message QueryPoolResponse {
  Pool pool = 1;
}

// QueryDataValidatorRequest is the request type for the Query/DataValidator RPC method.
message QueryDataValidatorRequest {
  string address = 1 ;
}

// QueryDataValidatorResponse is the response type for the Query/DataValidator RPC method.
message QueryDataValidatorResponse {
  DataValidator data_validator = 1;
}